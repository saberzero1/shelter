#!/usr/bin/env zsh

# Usage:
# tmux-sessionizer [<partial name of session>]
#
# Define directories in $XDG_CONFIG_HOME/tmux-sessionizer/directories

switch_to() {
  if [[ -z $TMUX ]]; then
    tmux attach-session -t $1
  else
    tmux switch-client -t $1
  fi
}

has_session() {
  tmux list-sessions -F '#{session_name}' | grep -qx "$1"
}

hydrate() {
  if [ -f $2/.tmux-sessionizer ]; then
    tmux send-keys -t $1 "source $2/.tmux-sessionizer" c-M
  elif [ -f $HOME/.tmux-sessionizer ]; then
    tmux send-keys -t $1 "source $HOME/.tmux-sessionizer" c-M
  else
    tmux send-keys -t $1 "tmux rename-window -t 1 'scratch' && clear" c-M
    tmux send-keys -t $1 "tmux new-window -kdS -n 'editor' -a -t 2 'nvim' && clear" c-M
    tmux send-keys -t $1 "tmux new-window -kdS -n 'watcher' -a -t 3 '$SHELL' && clear" c-M
    tmux send-keys -t $1 "tmux new-window -kdS -n 'remote' -a -t 4 '$SHELL' && clear" c-M
    tmux send-keys -t $1 "tmux new-window -kdS -n 'git' -a -t 5 'lazygit' && clear" c-M
  fi
}

if [[ $# -eq 1 ]]; then
  selected=$1
else
  selected=$(find $(eval echo $(xargs <"$HOME/.config/tmux/scripts/directories")) -mindepth 1 -maxdepth 1 -type d | fzf)
fi

if [[ -z $selected ]]; then
  exit 0
fi

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
  tmux new-session -ds $selected_name -c $selected
  hydrate $selected_name $selected
fi

if ! has_session $selected_name; then
  tmux new-session -ds $selected_name -c $selected
  hydrate $selected_name $selected
fi

switch_to $selected_name
